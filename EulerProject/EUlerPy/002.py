"""
Project Euler Problem 2
=======================

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed four million.
"""

# Recursive implementation of the Fibonnacci sequence
# saving calls to dictionary to speed up calculation by
# avoiding repeated calls with same input
fib_lib={}
def fib(n):
	if n in fib_lib:
		return fib_lib[n]
	else:
		if n==0:
			fib_lib[0]=0L
			return 0L
		elif n==1:
			fib_lib[1]=1L
			return 1L
		else:
			fib_lib[n] = long(fib(n-1)+fib(n-2))
			return fib_lib[n]

add=0L
i=1L
while True:
    i += 1
    n = fib(i)
    if n >= 4000000L:
        break
    if n%2==0:
        add += n
print add
        
    

